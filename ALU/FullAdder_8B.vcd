$date
	Tue Jul 13 20:28:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FullAdder_8B_t $end
$var wire 8 ! output_sum [7:0] $end
$var wire 1 " output_carry $end
$var reg 4 # i [3:0] $end
$var reg 8 $ input_a [7:0] $end
$var reg 8 % input_b [7:0] $end
$var reg 1 & input_carry $end
$scope module f $end
$var wire 8 ' a [7:0] $end
$var wire 8 ( b [7:0] $end
$var wire 1 & carry_in $end
$var wire 8 ) sum [7:0] $end
$var wire 7 * carry_temp [6:0] $end
$var wire 1 " carry_out $end
$scope module f1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 & carry_in $end
$var wire 1 - carry_out $end
$var wire 1 . w3 $end
$var wire 1 / w2 $end
$var wire 1 0 w1 $end
$var wire 1 1 sum $end
$scope module h1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 0 carry_out $end
$var wire 1 / sum $end
$upscope $end
$scope module h2 $end
$var wire 1 / a $end
$var wire 1 & b $end
$var wire 1 . carry_out $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 carry_in $end
$var wire 1 5 carry_out $end
$var wire 1 6 w3 $end
$var wire 1 7 w2 $end
$var wire 1 8 w1 $end
$var wire 1 9 sum $end
$scope module h1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 8 carry_out $end
$var wire 1 7 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 7 a $end
$var wire 1 4 b $end
$var wire 1 6 carry_out $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < carry_in $end
$var wire 1 = carry_out $end
$var wire 1 > w3 $end
$var wire 1 ? w2 $end
$var wire 1 @ w1 $end
$var wire 1 A sum $end
$scope module h1 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 @ carry_out $end
$var wire 1 ? sum $end
$upscope $end
$scope module h2 $end
$var wire 1 ? a $end
$var wire 1 < b $end
$var wire 1 > carry_out $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D carry_in $end
$var wire 1 E carry_out $end
$var wire 1 F w3 $end
$var wire 1 G w2 $end
$var wire 1 H w1 $end
$var wire 1 I sum $end
$scope module h1 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 H carry_out $end
$var wire 1 G sum $end
$upscope $end
$scope module h2 $end
$var wire 1 G a $end
$var wire 1 D b $end
$var wire 1 F carry_out $end
$var wire 1 I sum $end
$upscope $end
$upscope $end
$scope module f5 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L carry_in $end
$var wire 1 M carry_out $end
$var wire 1 N w3 $end
$var wire 1 O w2 $end
$var wire 1 P w1 $end
$var wire 1 Q sum $end
$scope module h1 $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 P carry_out $end
$var wire 1 O sum $end
$upscope $end
$scope module h2 $end
$var wire 1 O a $end
$var wire 1 L b $end
$var wire 1 N carry_out $end
$var wire 1 Q sum $end
$upscope $end
$upscope $end
$scope module f6 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T carry_in $end
$var wire 1 U carry_out $end
$var wire 1 V w3 $end
$var wire 1 W w2 $end
$var wire 1 X w1 $end
$var wire 1 Y sum $end
$scope module h1 $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 X carry_out $end
$var wire 1 W sum $end
$upscope $end
$scope module h2 $end
$var wire 1 W a $end
$var wire 1 T b $end
$var wire 1 V carry_out $end
$var wire 1 Y sum $end
$upscope $end
$upscope $end
$scope module f7 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ carry_in $end
$var wire 1 ] carry_out $end
$var wire 1 ^ w3 $end
$var wire 1 _ w2 $end
$var wire 1 ` w1 $end
$var wire 1 a sum $end
$scope module h1 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 ` carry_out $end
$var wire 1 _ sum $end
$upscope $end
$scope module h2 $end
$var wire 1 _ a $end
$var wire 1 \ b $end
$var wire 1 ^ carry_out $end
$var wire 1 a sum $end
$upscope $end
$upscope $end
$scope module f8 $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d carry_in $end
$var wire 1 " carry_out $end
$var wire 1 e w3 $end
$var wire 1 f w2 $end
$var wire 1 g w1 $end
$var wire 1 h sum $end
$scope module h1 $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 g carry_out $end
$var wire 1 f sum $end
$upscope $end
$scope module h2 $end
$var wire 1 f a $end
$var wire 1 d b $end
$var wire 1 e carry_out $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$upscope $end
$scope task test $end
$var reg 1 i A $end
$var reg 1 j B $end
$var reg 1 k C $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
b0 #
0"
b0 !
$end
#100
11
19
1A
1I
1Q
1Y
1a
b11111111 !
b11111111 )
1h
1/
17
1?
1G
1O
1W
1_
1f
1+
12
1:
1B
1J
1R
1Z
1b
b11111111 $
b11111111 '
1i
b1 #
#200
1,
13
1;
1C
1K
1S
1[
1c
0+
02
0:
0B
0J
0R
0Z
0b
b11111111 %
b11111111 (
b0 $
b0 '
1j
0i
b10 #
#300
14
1<
1D
1L
1T
1\
1d
1-
01
15
19
1=
1A
1E
1I
1M
1Q
1U
1Y
b1111111 *
1]
1a
1"
b11111110 !
b11111110 )
1h
10
0/
18
07
1@
0?
1H
0G
1P
0O
1X
0W
1`
0_
1g
0f
1+
12
1:
1B
1J
1R
1Z
1b
b11111111 $
b11111111 '
1i
b11 #
#400
09
0A
0I
0Q
0Y
0a
0h
04
0<
0D
0L
0T
0\
0d
0-
05
0=
0E
0M
0U
b0 *
0]
0"
00
08
0@
0H
0P
0X
0`
0g
b1 !
b1 )
11
0,
03
0;
0C
0K
0S
0[
0c
0+
02
0:
0B
0J
0R
0Z
0b
1&
b0 %
b0 (
b0 $
b0 '
1k
0j
0i
b100 #
#500
1"
1e
1d
1]
1^
1\
1U
1V
1T
1M
1N
1L
1E
1F
1D
1=
1>
1<
15
16
14
b1111111 *
1-
1.
01
09
0A
0I
0Q
0Y
0a
b0 !
b0 )
0h
1/
17
1?
1G
1O
1W
1_
1f
1+
12
1:
1B
1J
1R
1Z
1b
b11111111 $
b11111111 '
1i
b101 #
#600
1,
13
1;
1C
1K
1S
1[
1c
0+
02
0:
0B
0J
0R
0Z
0b
b11111111 %
b11111111 (
b0 $
b0 '
1j
0i
b110 #
#700
0.
11
06
19
0>
1A
0F
1I
0N
1Q
0V
1Y
0^
1a
0e
b11111111 !
b11111111 )
1h
10
0/
18
07
1@
0?
1H
0G
1P
0O
1X
0W
1`
0_
1g
0f
1+
12
1:
1B
1J
1R
1Z
1b
b11111111 $
b11111111 '
1i
b111 #
#800
b1000 #

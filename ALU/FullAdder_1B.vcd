$date
	Tue Jul 13 20:28:29 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FullAdder_1B_t $end
$var wire 1 ! output_sum $end
$var wire 1 " output_carry $end
$var reg 4 # i [3:0] $end
$var reg 1 $ input_a $end
$var reg 1 % input_b $end
$var reg 1 & input_carry $end
$scope module f $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 & carry_in $end
$var wire 1 " carry_out $end
$var wire 1 ' w3 $end
$var wire 1 ( w2 $end
$var wire 1 ) w1 $end
$var wire 1 ! sum $end
$scope module h1 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 ) carry_out $end
$var wire 1 ( sum $end
$upscope $end
$scope module h2 $end
$var wire 1 ( a $end
$var wire 1 & b $end
$var wire 1 ' carry_out $end
$var wire 1 ! sum $end
$upscope $end
$upscope $end
$scope task test $end
$var reg 1 * A $end
$var reg 1 + B $end
$var reg 1 , carry $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0,
0+
0*
0)
0(
0'
0&
0%
0$
b0 #
0"
0!
$end
#100
1!
1(
1$
1*
b1 #
#200
1%
0$
1+
0*
b10 #
#300
1"
0!
1)
0(
1$
1*
b11 #
#400
0"
1!
0)
1&
0%
0$
1,
0+
0*
b100 #
#500
1"
1'
0!
1(
1$
1*
b101 #
#600
1%
0$
1+
0*
b110 #
#700
0'
1!
1)
0(
1$
1*
b111 #
#800
b1000 #

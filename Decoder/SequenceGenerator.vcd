$date
	Thu Jul 15 22:29:40 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FDCE $end
$var wire 1 ! clear $end
$var wire 1 " clock $end
$var wire 1 # clock_enable $end
$var wire 1 $ d $end
$var reg 1 % q $end
$upscope $end
$scope module FDPE $end
$var wire 1 & clock $end
$var wire 1 ' clock_enable $end
$var wire 1 ( d $end
$var wire 1 ) preset $end
$var reg 1 * q $end
$upscope $end
$scope module SequenceGenerator_t $end
$var wire 1 + output_increment $end
$var wire 1 , output_fetch $end
$var wire 1 - output_execute $end
$var wire 1 . output_decode $end
$var reg 1 / clock $end
$var reg 1 0 input_clear $end
$var reg 1 1 input_clock_enable $end
$scope module sg $end
$var wire 1 0 clear $end
$var wire 1 / clock $end
$var wire 1 1 clock_enable $end
$var reg 1 . decode $end
$var reg 1 - execute $end
$var reg 1 , fetch $end
$var reg 1 + increment $end
$upscope $end
$scope task test $end
$var reg 1 2 CE $end
$var reg 1 3 CLR $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
13
12
11
10
0/
0.
0-
1,
0+
x*
z)
z(
z'
z&
x%
z$
z#
z"
z!
$end
#20
1/
#40
0/
#60
1/
#80
0/
#100
1.
0,
1/
00
03
#120
0/
#140
1-
0.
1/
#160
0/
#180
1+
0-
1/
#200
0/
#220
1,
0+
1/
#240
0/
#260
1.
0,
1/
#280
0/
#300
1-
0.
1/
#320
0/
#340
1+
0-
1/
#360
0/
#380
1,
0+
1/
#400
0/
